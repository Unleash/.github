name: Create release (template)

on:
  workflow_call:
    inputs:
      version:
        description: New version semver
        required: true
        type: string
      tag:
        description: NPM tag
        type: string
        default: "latest"
      working-directory:
        description: "Directory of package.json"
        type: string
        default: .
    secrets:
      GH_ACCESS_TOKEN:
        description: "GitHub token with repository write access"
        required: true
      NPM_ACCESS_TOKEN:
        description: "NPM token allowed to push to the registry"
        required: true

jobs:
  version-tag-publish-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.GH_ACCESS_TOKEN }}

      - name: Setup git config
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: lts/*
          registry-url: "https://registry.npmjs.org"

      - name: Set version variable
        # prevent double v "vv1.2.3" tags, go to package directory
        run: |
          PACKAGE_VERSION=$(node -p "'${{ inputs.version }}'.replace(/^v/, '')")
          echo "PACKAGE_VERSION=$PACKAGE_VERSION" >> $GITHUB_ENV

      - name: üîñ NPM version
        run: yarn version --new-version ${PACKAGE_VERSION} --no-commit-hooks
        working-directory: ${{ inputs.working-directory }}
        env:
          CI: true

      - name: üö¢ Push to git
        run: |
          git push origin ${{ github.ref_name }}
          git push --tags

      - name: üì¶Ô∏è Publish to NPM
        run: npm publish --access public --tag ${{ inputs.tag }}
        working-directory: ${{ inputs.working-directory }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_ACCESS_TOKEN }}

      - name: üìù Publish GitHub Release
        run: |
          WORKFLOW_RELEASE_PRERELEASE=$(node -p "'${{ inputs.tag }}' !== 'latest'")
          WORKFLOW_RELEASE_BODY=$(
          cat <<-_EOT_
          {
            "tag_name": "v${PACKAGE_VERSION}",
            "name": "v${PACKAGE_VERSION}",
            "prerelease": ${WORKFLOW_RELEASE_PRERELEASE},
            "generate_release_notes": true
          }
          _EOT_
          )
          curl -L --fail-with-body \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GH_ACCESS_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            "https://api.github.com/repos/$GITHUB_REPOSITORY/releases" \
            -d "$WORKFLOW_RELEASE_BODY"
